*mrak.txt* Eric Mrak's personal configuration

================================================================================
COLORSCHEME                                                     *mrak-colorscheme*

The colorscheme is set up using sixteen different colors for each of six
different palettes. For the grayscale colors, the darkness of top to
bottom is reversed for a light 'background'. You can override colors for
particular palettes by setting the appropriate global dictionaries. If you
specify a partial dictionary, only the colors specified will be overwriten.

								*mrak-palettes*
PALETTES
    *g:mrak_palette_dark_gui*
    *g:mrak_palette_dark_256*
    *g:mrak_palette_dark_16*
    *g:mrak_palette_light_gui*
    *g:mrak_palette_light_256*
    *g:mrak_palette_light_16*

								*mrak-colors*
COLORS
    GREYSCALE             COLORED
    bottom                red
    lowest                orange
    lower                 yellow
    low                   green
    high                  cyan
    higher                blue
    highest               purple
    top                   brown

If you wanted to change the `red` color for |termguicolors| you can set the
|g:mrak_palette_dark_gui| dictionary and specify `red`.
>
    let g:mrak_palette_dark_gui = {}
    let g:mrak_palette_dark_gui.red = "#FF4444"
<
Or you can change them all at once.
>
    let g:mrak_palette_dark_gui = #{
    \, bottom  : "#1c1c1c" , red    : "#df5f87"
    \, lowest  : "#262626" , orange : "#d78700"
    \, lower   : "#303030" , yellow : "#ffd700"
    \, low     : "#444444" , green  : "#87af5f"
    \, high    : "#a8a8a8" , cyan   : "#00afaf"
    \, higher  : "#dadada" , blue   : "#87afff"
    \, highest : "#e4e4e4" , purple : "#af87ff"
    \, top     : "#f5f5f5" , brown  : "#875f00"
    \}
<

================================================================================
COMMANDS                                                           *mrak-commands*

						*mrak-:Cd* *mrak-:Lcd* *mrak-:Tcd*
:Cd              A simple alias for `:cd %:h`
:Tcd             A simple alias for `:tcd %:h`
:Lcd             A simple alias for `:lcd %:h`

:PruneBuffers[!]					*mrak-:PruneBuffers*
		Delete all buffers not currently being displayed in a window.
		Use ! to wipeout instead.

:TabTitle						*mrak-:TabTitle*
		Retrieve or set the title of the current tab

:Edidir							*mrak-:Edidir*
		Initiate a three-pane editing experience to ergonomically
		and interactivly rename all the filenames in the current
		buffer. The three-pane layout consists of the original
		files, the target names for each file, and the generated
		`mv`, `mkdir`, and `rm` commands needed to arrive at the
		targeted state. Make your edits in the "target" buffer,
		and when you are satisfied you can pipe the "commands" buffer
		into your shell with `:w ! sh`. Typically you would start
		with a new buffer, use something like `:r ! find ...` to
		populate the buffer, and then invoke `:Edidir`.

    +-----------------+-----------------+
    | original files  | target files    |
    +-----------------+-----------------+
    | generated commands to execute     |
    +-----------------------------------+

 vim:ft=help:noet:sw=8:ts=8:sts=8:tw=78:norl:
